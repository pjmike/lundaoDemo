<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" 
       xmlns:tx="http://www.springframework.org/schema/tx"
         xmlns:rabbit="http://www.springframework.org/schema/rabbit"
         	   xmlns:websocket="http://www.springframework.org/schema/websocket"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.2.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
        http://www.springframework.org/schema/rabbit
        http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.2.xsd 
        http://www.springframework.org/schema/websocket 
        http://www.springframework.org/schema/websocket/spring-websocket-4.1.xsd">
        <import resource="spring-jedis.xml"/>
        <context:component-scan base-package="com.pjmike.lundao.aop"></context:component-scan>
        
        <context:component-scan base-package="com.pjmike.lundaoTaoti.service.Impl"></context:component-scan>
        <context:component-scan base-package="com.pjmike.lundao.service.Impl"></context:component-scan>
        <context:component-scan base-package="com.pjmike.lundao.util"></context:component-scan>
		<context:component-scan base-package="com.pjmike.lundao.configuration"></context:component-scan>        	
         <context:property-placeholder location="classpath:db.properties" ignore-unresolvable="true"/> 
	<!-- <import resource="applicationContext-redis.xml"/> -->
         <!-- 数据源1 -->
         <!-- 数据源，使用c3p0 --><bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
         		 <property name="driverClass" value="${jdbc.driver}" /> 
            	 <property name="jdbcUrl" value="${jdbc.url}" /> 
            	 <property name="user" value="${jdbc.username}" /> 
            	 <property name="password" value="${jdbc.password}" />
         </bean>
         <!-- <bean id="userDao" class="com.pjmike.ssm.dao.Userdemo">
       	<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
         </bean> -->
        <!--  <bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
         	<property name="mapperInterface" ref="com.pjmike.ssm.mapper.UserMapper"></property>
         	<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>s       	
         </bean> -->
         
         <!-- 数据源2 -->
         
         <bean id="dataSource2" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
         		 <property name="driverClass" value="${jdbc.driver2}" /> 
            	 <property name="jdbcUrl" value="${jdbc.url2}" /> 
            	 <property name="user" value="${jdbc.username2}" /> 
            	 <property name="password" value="${jdbc.password2}" />
         </bean>
         
         <!-- 数据库连接池 -->
        <bean id="dynamicDataSorce" class="com.pjmike.lundao.util.DynamicDataSource">
        	<property name="defaultTargetDataSource" ref="dataSource"></property>
        	<property name="targetDataSources">
        		<map key-type="java.lang.String">
        			<entry value-ref="dataSource" key="Lundao"></entry>
        			<entry value-ref="dataSource2" key="LundaoTaoti"></entry>
        		</map>
        	</property>
        </bean>
        
          <!-- sqlSessinFactory --> 
         <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"> 
         <!-- 数据源 --> <property name="dataSource" ref="dynamicDataSorce" />
         <!-- 加载mybatis的配置文件 --> <property name="configLocation" value="classpath:mybatis/sqlMapConfig.xml" /> 
         <property name="mapperLocations" value="classpath*:config/mappers/**/*.xml"></property>
         </bean>
        <!-- 定义事务管理器 -->
        <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        	<!-- 使用动态的数据源dynamicDataSorce -->
        	<property name="dataSource" ref="dynamicDataSorce"></property>
        </bean>
        
         	<!-- 使用annotation定义事务 -->
         	<tx:annotation-driven transaction-manager="transactionManager"/>
         	
         	
        <!-- 处理websocket配置 -->    
        <bean id="websocket" class="com.pjmike.lundao.websocket.WebSocketHandler"/>
            <websocket:handlers>
            <websocket:mapping path="/websocket" handler="websocket"/> 
            <websocket:handshake-interceptors>
            	 <bean class="com.pjmike.lundao.websocket.HandshakeInterceptor"/>
            </websocket:handshake-interceptors> 
           </websocket:handlers>
           
            <!-- 自动扫描出mapper接口 -->
         <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
         	<property name="basePackage" value="com.pjmike.lundao.mapper,com.pjmike.lundaoTaoti.mapper"></property>
      	   	<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
         </bean> 
        <!-- AOP自动代理功能 -->
    	<aop:aspectj-autoproxy proxy-target-class="true"/>
         
         
   
</beans>