<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" 
       xmlns:tx="http://www.springframework.org/schema/tx"
         xmlns:rabbit="http://www.springframework.org/schema/rabbit"
         	   xmlns:websocket="http://www.springframework.org/schema/websocket"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.2.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
        http://www.springframework.org/schema/rabbit
        http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.2.xsd 
        http://www.springframework.org/schema/websocket 
        http://www.springframework.org/schema/websocket/spring-websocket-4.1.xsd">
        
        <context:component-scan base-package="com.pjmike.lundao.aop"></context:component-scan>
        
        <context:component-scan base-package="com.pjmike.lundaoTaoti.service.Impl"></context:component-scan>
        <context:component-scan base-package="com.pjmike.lundao.service.Impl"></context:component-scan>
        <context:component-scan base-package="com.pjmike.lundao.util"></context:component-scan>
        
         <context:property-placeholder location="classpath:redis.properties" ignore-unresolvable="true"/>
         
         <!-- jedis配置 -->
         <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
         	<property name="maxIdle" value="${redis.maxIdle}"></property>
         	<property name="maxWaitMillis" value="${redis.maxWait}"></property>
         	<property name="testOnBorrow" value="${redis.testOnBorrow}"></property>
         </bean>
         <!-- redis服务中心 -->
         <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
         	<property name="port" value="${redis.port}"></property>
         	<property name="hostName" value="${redis.host}"></property>
         	<property name="poolConfig" ref="poolConfig"></property>
         </bean>
          <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
        </property>
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        
    </bean>
    <bean id="redisTokenManager" class="com.pjmike.lundao.util.RedisTokenManager">
    	<property name="redisTemplate" ref="redisTemplate"></property>
    </bean>
</beans>