<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pjmike.lundao.mapper.ReplyMapper" >
 <!--  <resultMap id="BaseResultMap" type="com.pjmike.lundao.po.Reply" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="comment_id" property="commentId" jdbcType="INTEGER" />
    <result column="reply_id" property="replyId" jdbcType="INTEGER" />
    <result column="from_uid" property="fromUid" jdbcType="INTEGER" />
    <result column="to_uid" property="toUid" jdbcType="INTEGER" />
    <result column="r_type" property="rType" jdbcType="VARCHAR" />
    <result column="r_view" property="rView" jdbcType="INTEGER" />
    <result column="r_like" property="rLike" jdbcType="INTEGER" />
    <result column="r_attention" property="rAttention" jdbcType="INTEGER" />
    <result column="r_dislike" property="rDislike" jdbcType="INTEGER" />
    <result column="r_publishTime" property="rPublishtime" jdbcType="TIMESTAMP" />
    <result column="r_contentTime" property="rContenttime" jdbcType="TIMESTAMP" />
    <result column="r_floor" property="rFloor" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.pjmike.lundao.po.Reply" extends="BaseResultMap" >
    <result column="r_describtion" property="rDescribtion" jdbcType="LONGVARCHAR" />
  </resultMap> -->
  <!-- 找出提问人与回复人之间的对话 -->
  
  
  
	<resultMap type="com.pjmike.lundao.po.ReplyExtend" id="BaseResultMap">
		  <id column="id" property="id" jdbcType="INTEGER" />
    <result column="comment_id" property="commentId" jdbcType="INTEGER" />
    <result column="reply_id" property="replyId" jdbcType="INTEGER" />
    <result column="from_uid" property="fromUid" jdbcType="INTEGER" />
    <result column="to_uid" property="toUid" jdbcType="INTEGER" />
    <result column="r_like" property="rLike" jdbcType="INTEGER" />
    <result column="r_describtion" property="rDescribtion" jdbcType="LONGVARCHAR" />
    <result column="r_publishTime" property="rPublishtime" jdbcType="TIMESTAMP" />
    <result column="r_contentTime" property="rContenttime" jdbcType="TIMESTAMP" />
    <result column="nickname" property="nickname" />
	</resultMap>

	<select id="select" parameterType="int" resultMap="BaseResultMap">
		select r.id,
	 		r.comment_id,
	 		r.reply_id,
	 		r.from_uid,
	 		r.to_uid,
	 		r.r_like,
	 		r_describtion,
	 		r.r_publishTime,
	 		r.r_contentTime,
	 		u.nickname
	 		from reply r left join user u on r.from_uid = u.id where comment_id =#{id}
	</select>
	
	<select id="selectbyReplyid" parameterType="int" resultMap="BaseResultMap">
		select r.id,
	 		r.comment_id,
	 		r.reply_id,
	 		r.from_uid,
	 		r.to_uid,
	 		r.r_type,
	 		r.r_like,
	 		r.r_publishTime,
	 		r.r_contentTime, 
	 		u.nickname
	 		from reply r left join user u on r.from_uid = u.id where id =#{id}
	</select>
 
  <!-- 判断一个用户是否具体点赞过某个回复 -->
  <select id="Islike"  resultType="int">
  	select r_status from  replyvote where r_uid =#{r_uid} and r_replyid =#{r_replyid}
  </select>
  <!-- 返回一个提问的点赞数 -->
  <select id="likeNumber" parameterType="int" resultType="java.lang.Integer">
  	select count(*) from replyvote  where r_replyid =#{id} and r_status=1 
  </select>
  <!--设置点赞-->
  <insert id="insetLike">
   insert into replyvote(r_replyid,r_uid,r_status) values(#{r_replyid},#{r_uid},1)
  </insert>
  <!-- 取消点赞 -->
  <update id="giveupLike">
  	update replyvote set r_status = 0 where r_uid =#{r_uid} and r_replyid =#{r_replyid}
  </update>
  
  <!-- 发起回复 -->
  <insert id="reply" parameterType="com.pjmike.lundao.po.Reply">
  	insert into reply(comment_id,reply_id,from_uid,to_uid,r_describtion) values(#{commentId},#{replyId},#{fromUid},
  	#{toUid},#{rDescribtion})
  </insert>
  
  <!-- 插入已点击的数据 -->
  <insert id="storeAlreadyClick" parameterType="com.pjmike.lundao.po.ReplyExtend">
  	insert into reply_copy(id,comment_id,reply_id,from_uid,to_uid,r_describtion) values(#{id},#{commentId},#{replyId},#{fromUid},#{toUid},#{rDescribtion})
  </insert>
  <!-- 找出所有点击过的数据 -->
  <select id="selectAleadyClick" resultMap="BaseResultMap">
  	select r.id,
	 		r.comment_id,
	 		r.reply_id,
	 		r.from_uid,
	 		r.to_uid,
	 		r.r_like,
	 		r.r_publishTime,
	 		r.r_contentTime 
	 		from reply_copy r
  </select>
  
</mapper>